{"version":3,"sources":["node_modules/browser-pack/_prelude.js","lib/actions.js","lib/dom.js","lib/movie.js","lib/scenario.js","lib/utils.js","lib/vendor/tween.js","lib/widgets/prompt.js","lib/widgets/tooltip.js"],"names":[],"mappings":"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","file":"movie.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","import {extend, makePos, getCursor} from './utils';\n\nvar actions = {\n\t/**\n\t * Type-in passed text into current editor char-by-char\n\t * @param {Object} options Current options\n\t * @param {CodeMirror} editor Editor instance where action should be \n\t * performed\n\t * @param {Function} next Function to call when action performance\n\t * is completed\n\t * @param {Function} timer Function that creates timer for delayed \n\t * execution. This timer will automatically delay execution when\n\t * scenario is paused and revert when played again \n\t */\n\ttype: function({options, editor, next, timer}) {\n\t\toptions = extend({\n\t\t\ttext: '',  // text to type\n\t\t\tdelay: 60, // delay between character typing\n\t\t\tpos: null  // initial position where to start typing\n\t\t}, wrap('text', options));\n\t\t\n\t\tif (!options.text) {\n\t\t\tthrow new Error('No text provided for \"type\" action');\n\t\t}\n\t\t\n\t\tif (options.pos !== null) {\n\t\t\teditor.setCursor(makePos(options.pos, editor));\n\t\t}\n\t\t\n\t\tvar chars = options.text.split('');\n\t\t\n\t\ttimer(function perform() {\n\t\t\tvar ch = chars.shift();\n\t\t\teditor.replaceSelection(ch, 'end');\n\t\t\tif (chars.length) {\n\t\t\t\ttimer(perform, options.delay);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}, options.delay);\n\t},\n\t\n\t/**\n\t * Wait for a specified timeout\n\t * @param options\n\t * @param editor\n\t * @param next\n\t * @param timer\n\t */\n\twait: function({options, editor, next, timer}) {\n\t\toptions = extend({\n\t\t\ttimeout: 100\n\t\t}, wrap('timeout', options));\n\t\t\n\t\ttimer(next, parseInt(options.timeout, 10));\n\t},\n\t\n\t/**\n\t * Move caret to a specified position\n\t */\n\tmoveTo: function({options, editor, next, timer}) {\n\t\toptions = extend({\n\t\t\tdelay: 80,\n\t\t\timmediate: false // TODO: remove, use delay: 0 instead\n\t\t}, wrap('pos', options));\n\t\t\n\t\tif (typeof options.pos === 'undefined') {\n\t\t\tthrow new Error('No position specified for \"moveTo\" action');\n\t\t}\n\t\t\n\t\tvar curPos = getCursor(editor);\n\t\t// reset selection, if exists\n\t\teditor.setSelection(curPos, curPos);\n\t\tvar targetPos = makePos(options.pos, editor);\n\t\t\n\t\tif (options.immediate || !options.delay) {\n\t\t\teditor.setCursor(targetPos);\n\t\t\tnext();\n\t\t}\n\n\t\tvar deltaLine = targetPos.line - curPos.line;\n\t\tvar deltaChar = targetPos.ch - curPos.ch;\n\t\tvar steps = Math.max(deltaChar, deltaLine);\n\t\t// var stepLine = deltaLine / steps;\n\t\t// var stepChar = deltaChar / steps;\n\t\tvar stepLine = deltaLine < 0 ? -1 : 1;\n\t\tvar stepChar = deltaChar < 0 ? -1 : 1;\n\n\t\ttimer(function perform() {\n\t\t\tcurPos = getCursor(editor);\n\t\t\tif (steps > 0 && !(curPos.line == targetPos.line && curPos.ch == targetPos.ch)) {\n\n\t\t\t\tif (curPos.line != targetPos.line) {\n\t\t\t\t\tcurPos.line += stepLine;\n\t\t\t\t}\n\n\t\t\t\tif (curPos.ch != targetPos.ch) {\n\t\t\t\t\tcurPos.ch += stepChar;\n\t\t\t\t}\n\n\t\t\t\teditor.setCursor(curPos);\n\t\t\t\tsteps--;\n\t\t\t\ttimer(perform, options.delay);\n\t\t\t} else {\n\t\t\t\teditor.setCursor(targetPos);\n\t\t\t\tnext();\n\t\t\t}\n\t\t}, options.delay);\n\t},\n\n\t/**\n\t * Similar to \"moveTo\" function but with immediate cursor position update\n\t */\n\tjumpTo: function({options, editor, next, timer}) {\n\t\toptions = extend({\n\t\t\tafterDelay: 200\n\t\t}, wrap('pos', options));\n\n\t\tif (typeof options.pos === 'undefined') {\n\t\t\tthrow new Error('No position specified for \"jumpTo\" action');\n\t\t}\n\t\t\n\t\teditor.setCursor(makePos(options.pos, editor));\n\t\ttimer(next, options.afterDelay);\n\t},\n\t\n\t/**\n\t * Executes predefined CodeMirror command\n\t * @param {Object} options\n\t * @param {CodeMirror} editor\n\t * @param {Function} next\n\t * @param {Function} timer\n\t */\n\trun: function({options, editor, next, timer}) {\n\t\toptions = extend({\n\t\t\tbeforeDelay: 500,\n\t\t\ttimes: 1\n\t\t}, wrap('command', options));\n\t\t\n\t\tvar times = options.times;\n\t\ttimer(function perform() {\n\t\t\tif (typeof options.command === 'function') {\n\t\t\t\toptions.command(editor, options);\n\t\t\t} else {\n\t\t\t\teditor.execCommand(options.command);\t\n\t\t\t}\n\t\t\t\n\t\t\tif (--times > 0) {\n\t\t\t\ttimer(perform, options.beforeDelay);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t}, options.beforeDelay);\n\t},\n\t\n\t/**\n\t * Creates selection for specified position\n\t * @param {Object} options\n\t * @param {CodeMirror} editor\n\t * @param {Function} next\n\t * @param {Function} timer\n\t */\n\tselect: function({options, editor, next, timer}) {\n\t\toptions = extend({\n\t\t\tfrom: 'caret'\n\t\t}, wrap('to', options));\n\t\t\n\t\tvar from = makePos(options.from, editor);\n\t\tvar to = makePos(options.to, editor);\n\t\teditor.setSelection(from, to);\n\t\tnext();\n\t}\n};\n\nfunction wrap(key, value) {\n\treturn typeof value === 'object' ? value : {[key]: value};\n}\n\nexport default actions;","import {toArray} from './utils';\n\nvar w3cCSS = document.defaultView && document.defaultView.getComputedStyle;\n\nexport function viewportRect() {\n\tvar body = document.body;\n\tvar docElem = document.documentElement;\n\tvar clientTop = docElem.clientTop  || body.clientTop  || 0;\n\tvar clientLeft = docElem.clientLeft || body.clientLeft || 0;\n\tvar scrollTop  = window.pageYOffset || docElem.scrollTop  || body.scrollTop;\n\tvar scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n\t\n\treturn {\n\t\ttop: scrollTop  - clientTop,\n\t\tleft: scrollLeft - clientLeft,\n\t\twidth: body.clientWidth || docElem.clientWidth,\n\t\theight: body.clientHeight || docElem.clientHeight\n\t};\n}\n\n/**\n * Removes element from parent\n * @param {Element} elem\n * @returns {Element}\n */\nexport function remove(elem) {\n\tar(elem).forEach(el => el.parentNode && el.parentNode.removeChild(el));\n\treturn elem;\n}\n\n/**\n * Renders string into DOM element\n * @param {String} str\n * @returns {Element}\n */\nexport function toDOM(str) {\n\tvar div = document.createElement('div');\n\tdiv.innerHTML = str;\n\treturn div.firstChild;\n}\n\n/**\n * Sets or retrieves CSS property value\n * @param {Element} elem\n * @param {String} prop\n * @param {String} val\n */\nexport function css(elem, prop, val) {\n\tif (typeof prop === 'string' && val == null) {\n\t\treturn getCSS(elem, prop);\n\t}\n\t\n\tif (typeof prop === 'string') {\n\t\tvar obj = {};\n\t\tobj[prop] = val;\n\t\tprop = obj;\n\t}\n\t\n\tsetCSS(elem, prop);\n}\n\nfunction ar(obj) {\n\tif (obj.length === +obj.length) {\n\t\treturn toArray(obj);\n\t}\n\t\n\treturn Array.isArray(obj) ? obj : [obj];\n}\n\nfunction toCamelCase(name) {\n\treturn name.replace(/\\-(\\w)/g, function(str, p1) {\n\t\treturn p1.toUpperCase();\n\t});\n}\n\n/**\n * Returns CSS property value of given element.\n * @author jQuery Team\n * @param {Element} elem\n * @param {String} name CSS property value\n */\nfunction getCSS(elem, name) {\n\tvar rnumpx = /^-?\\d+(?:px)?$/i,\n\t\trnum = /^-?\\d(?:\\.\\d+)?/,\n\t\trsuf = /\\d$/;\n\t\n\tvar nameCamel = toCamelCase(name);\n\t// If the property exists in style[], then it's been set\n\t// recently (and is current)\n\tif (elem.style[nameCamel]) {\n\t\treturn elem.style[nameCamel];\n\t} \n\t\t\n\tif (w3cCSS) {\n\t\tvar cs = window.getComputedStyle(elem, '');\n\t\treturn cs.getPropertyValue(name);\n\t}\n\t\n\tif (elem.currentStyle) {\n\t\tvar ret = elem.currentStyle[name] || elem.currentStyle[nameCamel];\n\t\tvar style = elem.style || elem;\n\t\t\n\t\t// From the awesome hack by Dean Edwards\n\t\t// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291\n\t\t\n\t\t// If we're not dealing with a regular pixel number\n\t\t// but a number that has a weird ending, we need to convert it to pixels\n\t\tif (!rnumpx.test(ret) && rnum.test(ret)) {\n\t\t\t// Remember the original values\n\t\t\tvar left = style.left, rsLeft = elem.runtimeStyle.left;\n\t\t\t\n\t\t\t// Put in the new values to get a computed value out\n\t\t\telem.runtimeStyle.left = elem.currentStyle.left;\n\t\t\tvar suffix = rsuf.test(ret) ? 'em' : '';\n\t\t\tstyle.left = nameCamel === 'fontSize' ? '1em' : (ret + suffix || 0);\n\t\t\tret = style.pixelLeft + 'px';\n\t\t\t\n\t\t\t// Revert the changed values\n\t\t\tstyle.left = left;\n\t\t\telem.runtimeStyle.left = rsLeft;\n\t\t}\n\t\t\n\t\treturn ret;\n\t}\n}\n\n/**\n * Sets CSS properties to given element\n * @param {Element} elem\n * @param {Object} params CSS properties to set\n */\nfunction setCSS(elem, params) {\n\tif (!elem) {\n\t\treturn;\n\t}\n\n\tvar numProps = {'line-height': 1, 'z-index': 1, opacity: 1};\n\tvar props = Object.keys(params).map(k => {\n\t\tvar v = params[k];\n\t\tvar name = k.replace(/([A-Z])/g, '-$1').toLowerCase();\n\t\treturn name + ':' + ((typeof v === 'number' && !(name in numProps)) ? v + 'px' : v);\n\t});\n\n\telem.style.cssText += ';' + props.join(';');\n}","/**\n * A high-level library interface for creating scenarios over textarea\n * element. The <code>CodeMirror.movie</code> takes reference to textarea\n * element (or its ID) and parses its content for initial content value,\n * scenario.\n */\nimport {parseJSON, extend, toArray} from './utils';\nimport Scenario from './scenario';\n\nvar ios = /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent);\nvar mac = ios || /Mac/.test(navigator.platform);\n\nvar macCharMap = {\n\t'ctrl': '⌃',\n\t'control': '⌃',\n\t'cmd': '⌘',\n\t'shift': '⇧',\n\t'alt': '⌥',\n\t'enter': '⏎',\n\t'tab': '⇥',\n\t'left': '←',\n\t'right': '→',\n\t'up': '↑',\n\t'down': '↓'\n};\n\t\nvar pcCharMap = {\n\t'cmd': 'Ctrl',\n\t'control': 'Ctrl',\n\t'ctrl': 'Ctrl',\n\t'alt': 'Alt',\n\t'shift': 'Shift',\n\t'left': '←',\n\t'right': '→',\n\t'up': '↑',\n\t'down': '↓'\n};\n\nexport var defaultOptions = {\n\t/**\n\t * Automatically parse movie definition from textarea content. Setting\n\t * this property to <code>false</code> assumes that user wants to\n\t * explicitly provide movie data: initial value, scenario etc.\n\t */\n\tparse: true,\n\t\n\t/**\n\t * String or regexp used to separate sections of movie definition, e.g.\n\t * default value, scenario and editor options\n\t */\n\tsectionSeparator: '@@@',\n\t\n\t/** Regular expression to extract outline from scenario line */\n\toutlineSeparator: /\\s+:::\\s+(.+)$/,\n\t\n\t/** Automatically prettify keyboard shortcuts in outline */\n\tprettifyKeys: true,\n\t\n\t/** Strip parentheses from prettyfied keyboard shortcut definition */\n\tstripParentheses: false\n};\n\n/**\n * High-level function to create movie instance on textarea.\n * @param {CodeMirror}\n * @param {Element} target Reference to textarea, either <code>Element</code>\n * or string ID. It can also accept existing CodeMirror object.\n * @param {Object} movieOptions Movie options. See <code>defaultOptions</code>\n * for value reference\n * @param {Object} editorOptions Additional options passed to CodeMirror\n * editor initializer.\n */\nexport default function movie(CodeMirrorEditor, target, movieOptions={}, editorOptions={}) {\n\tsetupCodeMirror(CodeMirrorEditor);\n\n\tif (typeof target === 'string') {\n\t\ttarget = document.getElementById(target);\n\t}\n\n\tvar targetIsTextarea = target.nodeName.toLowerCase() === 'textarea';\n\t\n\tmovieOptions = extend({}, defaultOptions, movieOptions);\n\teditorOptions = extend({\n\t\ttheme: 'espresso',\n\t\tmode : 'text/html',\n\t\tindentWithTabs: true,\n\t\ttabSize: 4,\n\t\tlineNumbers : true,\n\t\tpreventCursorMovement: true\n\t}, editorOptions);\n\t\n\tvar initialValue = editorOptions.value || (targetIsTextarea ? target.value : target.getValue()) || '';\n\t\n\tif (targetIsTextarea && movieOptions.parse) {\n\t\textend(movieOptions, parseMovieDefinition(initialValue, movieOptions));\n\t\tinitialValue = movieOptions.value;\n\t\tif (movieOptions.editorOptions) {\n\t\t\textend(editorOptions, movieOptions.editorOptions);\n\t\t}\n\n\t\t// read CM options from given textarea\n\t\tvar cmAttr = /^data\\-cm\\-(.+)$/i;\n\t\ttoArray(target.attributes).forEach(function(attr) {\n\t\t\tvar m = attr.name.match(cmAttr);\n\t\t\tif (m) {\n\t\t\t\teditorOptions[m[1]] = attr.value;\n\t\t\t}\n\t\t});\n\t}\n\t\n\t// normalize line endings\n\tinitialValue = initialValue.replace(/\\r?\\n/g, '\\n');\n\t\n\t// locate initial caret position from | symbol\n\tvar initialPos = initialValue.indexOf('|');\n\t\n\tif (targetIsTextarea) {\n\t\ttarget.value = editorOptions.value = initialValue = initialValue.replace(/\\|/g, '');\n\t}\n\n\t// create editor instance if needed\n\tvar editor = targetIsTextarea ? CodeMirrorEditor.fromTextArea(target, editorOptions) : target;\n\n\tif (initialPos != -1) {\n\t\teditor.setCursor(editor.posFromIndex(initialPos));\n\t}\n\t\n\t// save initial data so we can revert to it later\n\teditor.__initial = {\n\t\tcontent: initialValue,\n\t\tpos: editor.getCursor(true)\n\t};\n\t\n\tvar wrapper = editor.getWrapperElement();\n\t\n\t// adjust height, if required\n\tif (editorOptions.height) {\n\t\twrapper.style.height = editorOptions.height + 'px';\n\t}\n\t\n\twrapper.className += ' CodeMirror-movie';\n\t\n\tvar sc = new Scenario(movieOptions.scenario, editor);\n\treturn sc;\n};\n\n/**\n * Prettyfies key bindings references in given string: formats it according\n * to current user’s platform. The key binding should be defined inside \n * parentheses, e.g. <code>(ctrl-alt-up)</code>\n * @param {String} str\n * @param {Object} options Transform options\n * @returns {String}\n */\nfunction prettifyKeyBindings(str, options) {\n\toptions = options || {};\n\tvar reKey = /ctrl|alt|shift|cmd/i;\n\tvar map = mac ? macCharMap : pcCharMap;\n\treturn str.replace(/\\((.+?)\\)/g, function(m, kb) {\n\t\tif (reKey.test(kb)) {\n\t\t\tvar parts = kb.toLowerCase()\n\t\t\t\t.split(/[\\-\\+]/)\n\t\t\t\t.map(key => map[key.toLowerCase()] || key.toUpperCase());\n\t\t\t\n\t\t\tm = parts.join(mac ? '' : '+');\n\t\t\tif (!options.stripParentheses) {\n\t\t\t\tm = '(' + m + ')';\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn m;\n\t});\n}\n\nfunction readLines(text) {\n\t// IE fails to split string by regexp, \n\t// need to normalize newlines first\n\tvar nl = '\\n';\n\tvar lines = (text || '')\n\t\t.replace(/\\r\\n/g, nl)\n\t\t.replace(/\\n\\r/g, nl)\n\t\t.replace(/\\r/g, nl)\n\t\t.split(nl);\n\n\treturn lines.filter(Boolean);\n}\n\nfunction unescape(text) {\n\tvar replacements = {\n\t\t'&lt;':  '<',\n\t\t'&gt;':  '>',\n\t\t'&amp;': '&'\n\t};\n\n\treturn text.replace(/&(lt|gt|amp);/g, function(str, p1) {\n\t\treturn replacements[str] || str;\n\t});\n}\n\n/**\n * Extracts initial content and scenario from given string\n * @param {String} text\n * @param {Object} options\n */\nfunction parseMovieDefinition(text, options={}) {\n\toptions = extend({}, defaultOptions, options || {});\n\tvar parts = text.split(options.sectionSeparator);\n\n\t// parse scenario\n\tvar reDef = /^(\\w+)\\s*:\\s*(.+)$/;\n\tvar scenario = [];\n\tvar editorOptions = {};\n\n\tvar skipComment = line => line.charAt(0) !== '#';\n\n\t// read movie definition\n\treadLines(parts[1]).filter(skipComment).forEach(function(line) {\n\t\t// do we have outline definition here?\n\t\tline = line.replace(options.outlineSeparator, '');\n\n\t\tvar sd = line.match(reDef);\n\t\tif (!sd) {\n\t\t\treturn scenario.push(line.trim());\n\t\t}\n\t\t\t\n\n\t\tif (sd[2].charAt(0) === '{') {\n\t\t\tvar obj = {};\n\t\t\tobj[sd[1]] = parseJSON(unescape(sd[2]));\n\t\t\treturn scenario.push(obj);\n\t\t}\n\n\t\tscenario.push(sd[1] + ':' + unescape(sd[2]));\n\t});\n\n\t// read editor options\n\tif (parts[2]) {\n\t\treadLines(parts[2]).filter(skipComment).forEach(function(line) {\n\t\t\tvar sd = line.match(reDef);\n\t\t\tif (sd) {\n\t\t\t\teditorOptions[sd[1]] = sd[2];\n\t\t\t}\n\t\t});\n\t}\n\n\treturn {\n\t\tvalue: unescape(parts[0].trim()),\n\t\tscenario: scenario,\n\t\teditorOptions: editorOptions\n\t};\n}\n\nfunction setupCodeMirror(CodeMirrorEditor) {\n\tif ('preventCursorMovement' in CodeMirrorEditor.defaults) {\n\t\treturn;\n\t}\n\n\tCodeMirrorEditor.defineOption('preventCursorMovement', false, cm => {\n\t\tvar handler = (cm, event) => cm.getOption('readOnly') && event.preventDefault();\n\t\tcm.on('keydown', handler);\n\t\tcm.on('mousedown', handler);\n\t});\n}\n","import commonActions from './actions';\nimport {actions as prompt} from './widgets/prompt';\nimport {actions as tooltip} from './widgets/tooltip';\nimport {extend} from './utils';\n\nvar actionsDefinition = extend({}, commonActions, prompt, tooltip);\n\nvar STATE_IDLE  = 'idle';\nvar STATE_PLAY  = 'play';\nvar STATE_PAUSE = 'pause';\n\n// Regular expression used to split event strings\nvar eventSplitter = /\\s+/;\n\nexport var defaultOptions = {\n\tbeforeDelay: 1000,\n\tafterDelay: 1000\n};\n\n/**\n * @param {Object} actions Actions scenario\n * @param {Object} data Initial content (<code>String</code>) or editor\n * instance (<code>CodeMirror</code>)\n */\nexport default class Scenario {\n\tconstructor(actions, data) {\n\t\tthis._actions = actions;\n\t\tthis._editor = null;\n\t\tthis._state = STATE_IDLE;\n\t\tthis._timerQueue = [];\n\t\t\n\t\tif (data && 'getValue' in data) {\n\t\t\tthis._editor = data;\n\t\t}\n\t\t\n\t\tvar ed = this._editor;\n\t\tif (ed && !ed.__initial) {\n\t\t\ted.__initial = {\n\t\t\t\tcontent: ed.getValue(),\n\t\t\t\tpos: ed.getCursor(true)\n\t\t\t};\n\t\t}\n\t}\n\n\t_setup(editor) {\n\t\tif (!editor && this._editor) {\n\t\t\teditor = this._editor;\n\t\t}\n\t\t\n\t\teditor.execCommand('revert');\n\t\treturn editor;\n\t}\n\t\n\t/**\n\t * Play current scenario\n\t * @param {CodeMirror} editor Editor instance where on which scenario \n\t * should be played\n\t * @memberOf Scenario\n\t */\n\tplay(editor) {\n\t\tif (this._state === STATE_PLAY) {\n\t\t\t// already playing\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (this._state === STATE_PAUSE) {\n\t\t\t// revert from paused state\n\t\t\teditor = editor || this._editor;\n\t\t\teditor.focus();\n\t\t\tvar timerObj = null;\n\t\t\twhile (timerObj = this._timerQueue.shift()) {\n\t\t\t\trequestTimer(timerObj.fn, timerObj.delay);\n\t\t\t}\n\t\t\t\n\t\t\tthis._state = STATE_PLAY;\n\t\t\tthis.trigger('resume');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis._editor = editor = this._setup(editor);\n\t\teditor.focus();\n\t\t\n\t\tvar timer = this.requestTimer.bind(this);\n\n\t\tconsole.log('raw actions: ', this._actions)\n\n\t\tvar goto = actionIx => {\n\t\t\tif (actionIx >= this._actions.length) {\n\t\t\t\treturn timer(() => {\n\t\t\t\t\tthis.stop();\n\t\t\t\t}, defaultOptions.afterDelay);\n\t\t\t}\n\n\t\t\tthis.trigger('action', actionIx);\n\n\t\t\tvar action = parseActionCall(this._actions[actionIx]);\n\n\t\t\t// for (const i = actionIx - 1; i >= 0; i--) {\n\t\t\t// \tif (th)\n\t\t\t// }\n\n\t\t\tconsole.log('action: ', action)\n\t\t\t\n\t\t\tif (action.name in actionsDefinition) {\n\t\t\t\tactionsDefinition[action.name]({\n\t\t\t\t\toptions: action.options,\n\t\t\t\t\teditor,\n\t\t\t\t\tnext: () => goto(actionIx + 1),\n\t\t\t\t\tprev: () => goto(actionIx - 1),\n\t\t\t\t\ttimer\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthrow new Error('No such action: ' + action.name);\n\t\t\t}\n\t\t};\n\n\t\tthis._state = STATE_PLAY;\n\t\tthis._editor.setOption('readOnly', true);\n\t\tthis.trigger('play');\n\t\ttimer(() => goto(0), defaultOptions.beforeDelay);\n\t}\n\t\n\t/**\n\t * Pause current scenario playback. It can be restored with \n\t * <code>play()</code> method call \n\t */\n\tpause() {\n\t\tthis._state = STATE_PAUSE;\n\t\tthis.trigger('pause');\n\t}\n\t\n\t/**\n\t * Stops playback of current scenario\n\t */\n\tstop() {\n\t\tif (this._state !== STATE_IDLE) {\n\t\t\tthis._state = STATE_IDLE;\n\t\t\tthis._timerQueue.length = 0;\n\t\t\tthis._editor.setOption('readOnly', false);\n\t\t\tthis.trigger('stop');\n\t\t}\n\t}\n\t\n\t/**\n\t * Returns current playback state\n\t * @return {String}\n\t */\n\tget state() {\n\t\treturn this._state;\n\t}\n\t\n\t/**\n\t * Toggle playback of movie scenario\n\t */\n\ttoggle() {\n\t\tif (this._state === STATE_PLAY) {\n\t\t\tthis.pause();\n\t\t} else {\n\t\t\tthis.play();\n\t\t}\n\t}\n\t\n\trequestTimer(fn, delay) {\n\t\tif (this._state !== STATE_PLAY) {\n\t\t\t// save function call into a queue till next 'play()' call\n\t\t\tthis._timerQueue.push({\n\t\t\t\tfn: fn,\n\t\t\t\tdelay: delay\n\t\t\t});\n\t\t} else {\n\t\t\treturn requestTimer(fn, delay);\n\t\t}\n\t}\n\t\n\t// borrowed from Backbone\n\t/**\n\t * Bind one or more space separated events, `events`, to a `callback`\n\t * function. Passing `\"all\"` will bind the callback to all events fired.\n\t * @param {String} events\n\t * @param {Function} callback\n\t * @param {Object} context\n\t * @memberOf eventDispatcher\n\t */\n\ton(events, callback, context) {\n\t\tvar calls, event, node, tail, list;\n\t\tif (!callback) {\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tevents = events.split(eventSplitter);\n\t\tcalls = this._callbacks || (this._callbacks = {});\n\n\t\t// Create an immutable callback list, allowing traversal during\n\t\t// modification.  The tail is an empty object that will always be used\n\t\t// as the next node.\n\t\twhile (event = events.shift()) {\n\t\t\tlist = calls[event];\n\t\t\tnode = list ? list.tail : {};\n\t\t\tnode.next = tail = {};\n\t\t\tnode.context = context;\n\t\t\tnode.callback = callback;\n\t\t\tcalls[event] = {\n\t\t\t\ttail : tail,\n\t\t\t\tnext : list ? list.next : node\n\t\t\t};\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Remove one or many callbacks. If `context` is null, removes all\n\t * callbacks with that function. If `callback` is null, removes all\n\t * callbacks for the event. If `events` is null, removes all bound\n\t * callbacks for all events.\n\t * @param {String} events\n\t * @param {Function} callback\n\t * @param {Object} context\n\t */\n\toff(events, callback, context) {\n\t\tvar event, calls, node, tail, cb, ctx;\n\n\t\t// No events, or removing *all* events.\n\t\tif (!(calls = this._callbacks)) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif (!(events || callback || context)) {\n\t\t\tdelete this._callbacks;\n\t\t\treturn this;\n\t\t}\n\n\t\t// Loop through the listed events and contexts, splicing them out of the\n\t\t// linked list of callbacks if appropriate.\n\t\tevents = events ? events.split(eventSplitter) : Object.keys(calls);\n\t\twhile (event = events.shift()) {\n\t\t\tnode = calls[event];\n\t\t\tdelete calls[event];\n\t\t\tif (!node || !(callback || context)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\t// Create a new list, omitting the indicated callbacks.\n\t\t\ttail = node.tail;\n\t\t\twhile ((node = node.next) !== tail) {\n\t\t\t\tcb = node.callback;\n\t\t\t\tctx = node.context;\n\t\t\t\tif ((callback && cb !== callback) || (context && ctx !== context)) {\n\t\t\t\t\tthis.on(event, cb, ctx);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n\t\n\t/**\n\t * Trigger one or many events, firing all bound callbacks. Callbacks are\n\t * passed the same arguments as `trigger` is, apart from the event name\n\t * (unless you're listening on `\"all\"`, which will cause your callback\n\t * to receive the true name of the event as the first argument).\n\t * @param {String} events\n\t */\n\ttrigger(events, ...rest) {\n\t\tvar event, node, calls, tail, args, all;\n\t\tif (!(calls = this._callbacks)) {\n\t\t\treturn this;\n\t\t}\n\t\t\n\t\tall = calls.all;\n\t\tevents = events.split(eventSplitter);\n\n\t\t// For each event, walk through the linked list of callbacks twice,\n\t\t// first to trigger the event, then to trigger any `\"all\"` callbacks.\n\t\twhile (event = events.shift()) {\n\t\t\tif (node = calls[event]) {\n\t\t\t\ttail = node.tail;\n\t\t\t\twhile ((node = node.next) !== tail) {\n\t\t\t\t\tnode.callback.apply(node.context || this, rest);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (node = all) {\n\t\t\t\ttail = node.tail;\n\t\t\t\targs = [ event ].concat(rest);\n\t\t\t\twhile ((node = node.next) !== tail) {\n\t\t\t\t\tnode.callback.apply(node.context || this, args);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n};\n\n/**\n * Parses action call from string\n * @param {String} data\n * @returns {Object}\n */\nfunction parseActionCall(data) {\n\tif (typeof data === 'string') {\n\t\tvar parts = data.split(':');\n\t\treturn {\n\t\t\tname: parts.shift(),\n\t\t\toptions: parts.join(':')\n\t\t};\n\t} else {\n\t\tvar name = Object.keys(data)[0];\n\t\treturn {\n\t\t\tname: name,\n\t\t\toptions: data[name]\n\t\t};\n\t}\n}\n\nfunction requestTimer(fn, delay) {\n\tif (!delay) {\n\t\tfn();\n\t} else {\n\t\treturn setTimeout(fn, delay);\n\t}\n}","var propCache = {};\n\n// detect CSS 3D Transforms for smoother animations \nexport var has3d = (function() {\n\tvar el = document.createElement('div');\n\tvar cssTransform = prefixed('transform');\n\tif (cssTransform) {\n\t\tel.style[cssTransform] = 'translateZ(0)';\n\t\treturn (/translatez/i).test(el.style[cssTransform]); \n\t}\n\t\n\treturn false;\n})();\n\nexport function extend(obj, ...args) {\n\targs.forEach(a => {\n\t\tif (typeof a === 'object') {\n\t\t\tObject.keys(a).forEach(key => obj[key] = a[key]);\n\t\t}\n\t});\n\treturn obj;\n}\n\nexport function toArray(obj, ix=0) {\n\treturn Array.prototype.slice.call(obj, ix);\n}\n\n/**\n * Returns prefixed (if required) CSS property name\n * @param  {String} prop\n * @return {String}\n */\nexport function prefixed(prop) {\n\tif (prop in propCache) {\n\t\treturn propCache[prop];\n\t}\n\n\tvar el = document.createElement('div');\n\tvar style = el.style;\n\n\tvar prefixes = ['o', 'ms', 'moz', 'webkit'];\n\tvar props = [prop];\n\tvar capitalize = function(str) {\n\t\treturn str.charAt(0).toUpperCase() + str.substr(1);\n\t};\n\n\tprop = prop.replace(/\\-([a-z])/g, function(str, ch) {\n\t\treturn ch.toUpperCase();\n\t});\n\n\tvar capProp = capitalize(prop);\n\tprefixes.forEach(function(prefix) {\n\t\tprops.push(prefix + capProp, capitalize(prefix) + capProp);\n\t});\n\n\tfor (var i = 0, il = props.length; i < il; i++) {\n\t\tif (props[i] in style) {\n\t\t\treturn propCache[prop] = props[i];\n\t\t}\n\t}\n\n\treturn propCache[prop] = null;\n}\n\nexport function posObj(obj) {\n\treturn {\n\t\tline: obj.line,\n\t\tch: obj.ch\n\t};\n}\n\nexport function getCursor(editor, start='from') {\n\treturn posObj(editor.getCursor(start));\n}\n\n/**\n * Helper function that produces <code>{line, ch}</code> object from\n * passed argument\n * @param {Object} pos\n * @param {CodeMirror} editor\n * @returns {Object}\n */\nexport function makePos(pos, editor) {\n\tif (pos === 'caret') {\n\t\treturn getCursor(editor);\n\t}\n\n\tif (typeof pos === 'string') {\n\t\tif (~pos.indexOf(':')) {\n\t\t\tlet parts = pos.split(':');\n\t\t\treturn {\n\t\t\t\tline: +parts[0],\n\t\t\t\tch: +parts[1]\n\t\t\t};\n\t\t}\n\t\t\n\t\tpos = +pos;\n\t}\n\t\n\tif (typeof pos === 'number') {\n\t\treturn posObj(editor.posFromIndex(pos));\n\t}\n\t\n\treturn posObj(pos);\n}\n\nexport function template(tmpl, data) {\n\tvar fn = data => tmpl.replace(/<%([-=])?\\s*([\\w\\-]+)\\s*%>/g, (str, op, key) => data[key.trim()]);\n\treturn data ? fn(data) : fn;\n}\n\nexport function find(arr, iter) {\n\tvar found;\n\tarr.some((item, i, arr) => {\n\t\tif (iter(item, i, arr)) {\n\t\t\treturn found = item;\n\t\t}\n\t});\n\treturn found;\n}\n\n/**\n * Relaxed JSON parser.\n * @param {String} text\n * @returns {Object} \n */\nexport function parseJSON(text) {\n\ttry {\n\t\treturn (new Function('return ' + text))();\n\t} catch(e) {\n\t\treturn {};\n\t}\n}","var global = window;\nvar time = Date.now \n\t? function() {return Date.now();}\n\t: function() {return +new Date;};\n\nvar indexOf = 'indexOf' in Array.prototype\n\t? function(array, value) {return array.indexOf(value);}\n\t: function(array, value) {\n\t\tfor (var i = 0, il = array.length; i < il; i++) {\n\t\t\tif (array[i] === value) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t};\n\nfunction extend(obj) {\n\tfor (var i = 1, il = arguments.length, source; i < il; i++) {\n\t\tsource = arguments[i];\n\t\tif (source) {\n\t\t\tfor (var prop in source) {\n\t\t\t\tobj[prop] = source[prop];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n\n/**\n * requestAnimationFrame polyfill by Erik Möller\n * fixes from Paul Irish and Tino Zijdel\n * http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n * http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\n */\n(function() {\n\tvar lastTime = 0;\n\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\n\tfor (var x = 0; x < vendors.length && !global.requestAnimationFrame; ++x) {\n\t\tglobal.requestAnimationFrame = global[vendors[x] + 'RequestAnimationFrame'];\n\t\tglobal.cancelAnimationFrame = global[vendors[x] + 'CancelAnimationFrame']\n\t\t\t\t|| global[vendors[x] + 'CancelRequestAnimationFrame'];\n\t}\n\t\n\tif (!global.requestAnimationFrame)\n\t\tglobal.requestAnimationFrame = function(callback, element) {\n\t\t\tvar currTime = time();\n\t\t\tvar timeToCall = Math.max(0, 16 - (currTime - lastTime));\n\t\t\tvar id = global.setTimeout(function() {\n\t\t\t\tcallback(currTime + timeToCall);\n\t\t\t}, timeToCall);\n\t\t\tlastTime = currTime + timeToCall;\n\t\t\treturn id;\n\t\t};\n\n\tif (!global.cancelAnimationFrame)\n\t\tglobal.cancelAnimationFrame = function(id) {\n\t\t\tclearTimeout(id);\n\t\t};\n}());\n\n\nvar dummyFn = function() {};\nvar anims = [];\nvar idCounter = 0;\n\nvar defaults = {\n\tduration: 500, // ms\n\tdelay: 0,\n\teasing: 'linear',\n\tstart: dummyFn,\n\tstep: dummyFn,\n\tcomplete: dummyFn,\n\tautostart: true,\n\treverse: false\n};\n\nexport var easings = {\n\tlinear: function(t, b, c, d) {\n\t\treturn c * t / d + b;\n\t},\n\tinQuad: function(t, b, c, d) {\n\t\treturn c*(t/=d)*t + b;\n\t},\n\toutQuad: function(t, b, c, d) {\n\t\treturn -c *(t/=d)*(t-2) + b;\n\t},\n\tinOutQuad: function(t, b, c, d) {\n\t\tif((t/=d/2) < 1) return c/2*t*t + b;\n\t\treturn -c/2 *((--t)*(t-2) - 1) + b;\n\t},\n\tinCubic: function(t, b, c, d) {\n\t\treturn c*(t/=d)*t*t + b;\n\t},\n\toutCubic: function(t, b, c, d) {\n\t\treturn c*((t=t/d-1)*t*t + 1) + b;\n\t},\n\tinOutCubic: function(t, b, c, d) {\n\t\tif((t/=d/2) < 1) return c/2*t*t*t + b;\n\t\treturn c/2*((t-=2)*t*t + 2) + b;\n\t},\n\tinExpo: function(t, b, c, d) {\n\t\treturn(t==0) ? b : c * Math.pow(2, 10 *(t/d - 1)) + b - c * 0.001;\n\t},\n\toutExpo: function(t, b, c, d) {\n\t\treturn(t==d) ? b+c : c * 1.001 *(-Math.pow(2, -10 * t/d) + 1) + b;\n\t},\n\tinOutExpo: function(t, b, c, d) {\n\t\tif(t==0) return b;\n\t\tif(t==d) return b+c;\n\t\tif((t/=d/2) < 1) return c/2 * Math.pow(2, 10 *(t - 1)) + b - c * 0.0005;\n\t\treturn c/2 * 1.0005 *(-Math.pow(2, -10 * --t) + 2) + b;\n\t},\n\tinElastic: function(t, b, c, d, a, p) {\n\t\tvar s;\n\t\tif(t==0) return b;  if((t/=d)==1) return b+c;  if(!p) p=d*.3;\n\t\tif(!a || a < Math.abs(c)) { a=c; s=p/4; } else s = p/(2*Math.PI) * Math.asin(c/a);\n\t\treturn -(a*Math.pow(2,10*(t-=1)) * Math.sin((t*d-s)*(2*Math.PI)/p )) + b;\n\t},\n\toutElastic: function(t, b, c, d, a, p) {\n\t\tvar s;\n\t\tif(t==0) return b;  if((t/=d)==1) return b+c;  if(!p) p=d*.3;\n\t\tif(!a || a < Math.abs(c)) { a=c; s=p/4; } else s = p/(2*Math.PI) * Math.asin(c/a);\n\t\treturn(a*Math.pow(2,-10*t) * Math.sin((t*d-s)*(2*Math.PI)/p ) + c + b);\n\t},\n\tinOutElastic: function(t, b, c, d, a, p) {\n\t\tvar s;\n\t\tif(t==0) return b; \n\t\tif((t/=d/2)==2) return b+c;\n\t\tif(!p) p=d*(.3*1.5);\n\t\tif(!a || a < Math.abs(c)) { a=c; s=p/4; }       else s = p/(2*Math.PI) * Math.asin(c/a);\n\t\tif(t < 1) return -.5*(a*Math.pow(2,10*(t-=1)) * Math.sin((t*d-s)*(2*Math.PI)/p )) + b;\n\t\treturn a*Math.pow(2,-10*(t-=1)) * Math.sin((t*d-s)*(2*Math.PI)/p )*.5 + c + b;\n\t},\n\tinBack: function(t, b, c, d, s) {\n\t\tif(s == undefined) s = 1.70158;\n\t\treturn c*(t/=d)*t*((s+1)*t - s) + b;\n\t},\n\toutBack: function(t, b, c, d, s) {\n\t\tif(s == undefined) s = 1.70158;\n\t\treturn c*((t=t/d-1)*t*((s+1)*t + s) + 1) + b;\n\t},\n\tinOutBack: function(t, b, c, d, s) {\n\t\tif(s == undefined) s = 1.70158;\n\t\tif((t/=d/2) < 1) return c/2*(t*t*(((s*=(1.525))+1)*t - s)) + b;\n\t\treturn c/2*((t-=2)*t*(((s*=(1.525))+1)*t + s) + 2) + b;\n\t},\n\tinBounce: function(t, b, c, d) {\n\t\treturn c - this.outBounce(t, d-t, 0, c, d) + b;\n\t},\n\toutBounce: function(t, b, c, d) {\n\t\tif((t/=d) <(1/2.75)) {\n\t\t\treturn c*(7.5625*t*t) + b;\n\t\t} else if(t <(2/2.75)) {\n\t\t\treturn c*(7.5625*(t-=(1.5/2.75))*t + .75) + b;\n\t\t} else if(t <(2.5/2.75)) {\n\t\t\treturn c*(7.5625*(t-=(2.25/2.75))*t + .9375) + b;\n\t\t} else {\n\t\t\treturn c*(7.5625*(t-=(2.625/2.75))*t + .984375) + b;\n\t\t}\n\t},\n\tinOutBounce: function(t, b, c, d) {\n\t\tif(t < d/2) return this.inBounce(t*2, 0, c, d) * .5 + b;\n\t\treturn this.outBounce(t*2-d, 0, c, d) * .5 + c*.5 + b;\n\t},\n\toutHard: function(t, b, c, d) {\n\t\tvar ts = (t/=d)*t;\n\t\tvar tc = ts*t;\n\t\treturn b + c*(1.75*tc*ts + -7.4475*ts*ts + 12.995*tc + -11.595*ts + 5.2975*t);\n\t}\n};\n\nfunction mainLoop() {\n\tif (!anims.length) {\n\t\t// no animations left, stop polling\n\t\treturn;\n\t}\n\t\n\tvar now = time();\n\tvar filtered = [], tween, opt;\n\n\t// do not use Array.filter() of _.filter() function\n\t// since tween’s callbacks can add new animations\n\t// in runtime. In this case, filter function will loose\n\t// newly created animation\n\tfor (var i = 0; i < anims.length; i++) {\n\t\ttween = anims[i];\n\n\t\tif (!tween.animating) {\n\t\t\tcontinue;\n\t\t}\n\n\t\topt = tween.options;\n\n\t\tif (tween.startTime > now) {\n\t\t\tfiltered.push(tween);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (tween.infinite) {\n\t\t\t// opt.step.call(tween, 0);\n\t\t\topt.step(0, tween);\n\t\t\tfiltered.push(tween);\n\t\t} else if (tween.pos === 1 || tween.endTime <= now) {\n\t\t\ttween.pos = 1;\n\t\t\t// opt.step.call(tween, opt.reverse ? 0 : 1);\n\t\t\topt.step(opt.reverse ? 0 : 1, tween);\n\t\t\ttween.stop();\n\t\t} else {\n\t\t\ttween.pos = opt.easing(now - tween.startTime, 0, 1, opt.duration);\n\t\t\t// opt.step.call(tween, opt.reverse ? 1 - tween.pos : tween.pos);\n\t\t\topt.step(opt.reverse ? 1 - tween.pos : tween.pos, tween);\n\t\t\tfiltered.push(tween);\n\t\t}\t\t\t\n\t}\n\n\tanims = filtered;\n\n\tif (anims.length) {\n\t\trequestAnimationFrame(mainLoop);\n\t}\n}\n\nfunction addToQueue(tween) {\n\tif (indexOf(anims, tween) == -1) {\n\t\tanims.push(tween);\n\t\tif (anims.length == 1) {\n\t\t\tmainLoop();\n\t\t}\n\t}\n}\n\nexport class Tween {\n\tconstructor(options) {\n\t\tthis.options = extend({}, defaults, options);\n\t\n\t\tvar e = this.options.easing;\n\t\tif (typeof e == 'string') {\n\t\t\tif (!easings[e])\n\t\t\t\tthrow 'Unknown \"' + e + '\" easing function';\n\t\t\tthis.options.easing = easings[e];\n\t\t}\n\t\t\n\t\tif (typeof this.options.easing != 'function')\n\t\t\tthrow 'Easing should be a function';\n\n\t\tthis._id = 'tw' + (idCounter++);\n\t\t\n\t\tif (this.options.autostart) {\n\t\t\tthis.start();\n\t\t}\n\t}\n\n\t/**\n\t * Start animation from the beginning\n\t */\n\tstart() {\n\t\tif (!this.animating) {\n\t\t\tthis.pos = 0;\n\t\t\tthis.startTime = time() + (this.options.delay || 0);\n\t\t\tthis.infinite = this.options.duration === 'infinite';\n\t\t\tthis.endTime = this.infinite ? 0 : this.startTime + this.options.duration;\n\t\t\tthis.animating = true;\n\t\t\tthis.options.start(this);\n\t\t\taddToQueue(this);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Stop animation\n\t */\n\tstop() {\n\t\tif (this.animating) {\n\t\t\tthis.animating = false;\n\t\t\tif (this.options.complete) {\n\t\t\t\tthis.options.complete(this);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\ttoggle() {\n\t\tif (this.animating) {\n\t\t\tthis.stop();\n\t\t} else {\n\t\t\tthis.start();\n\t\t}\n\t}\n}\n\nexport default function tween(options) {\n\treturn new Tween(options);\n}\n\n/**\n * Get or set default value\n * @param  {String} name\n * @param  {Object} value\n * @return {Object}\n */\nexport function defaults(name, value) {\n\tif (typeof value != 'undefined') {\n\t\tdefaults[name] = value;\n\t}\n\n\treturn defaults[name];\n}\n\n/**\n * Returns all active animation objects.\n * For debugging mostly\n * @return {Array}\n */\nexport function _all() {\n\treturn anims;\n}\n\nexport function stop() {\n\tfor (var i = 0; i < anims.length; i++) {\n\t\tanims[i].stop();\n\t}\n\n\tanims.length = 0;\n};","/**\n * Shows fake prompt dialog with interactive value typing\n */\nimport tween from '../vendor/tween';\nimport {extend, template, has3d, prefixed} from '../utils';\nimport * as dom from '../dom';\n\nvar dialogInstance = null;\nvar bgInstance = null;\nvar lastTween = null;\n\nexport var actions = {\n\tprompt({options, editor, next, timer}) {\n\t\toptions = extend({\n\t\t\ttitle: 'Enter something',\n\t\t\tdelay: 80,        // delay between character typing\n\t\t\ttypeDelay: 1000,  // time to wait before typing text\n\t\t\thideDelay: 2000   // time to wait before hiding prompt dialog\n\t\t}, wrap('text', options));\n\t\t\n\t\tshow(options.title, editor.getWrapperElement(), function(dialog) {\n\t\t\ttimer(function() {\n\t\t\t\ttypeText(dialog.querySelector('.CodeMirror-prompt__input'), options, timer, function() {\n\t\t\t\t\ttimer(function() {\n\t\t\t\t\t\thide(next);\n\t\t\t\t\t}, options.hideDelay);\n\t\t\t\t});\n\t\t\t}, options.typeDelay);\n\t\t});\n\t}\n};\n\nexport function show(text, target, callback) {\n\thide();\n\tdialogInstance = dom.toDOM(`<div class=\"CodeMirror-prompt\">\n\t\t<div class=\"CodeMirror-prompt__title\">${text}</div>\n\t\t<input type=\"text\" name=\"prompt\" class=\"CodeMirror-prompt__input\" readonly=\"readonly\" />\n\t\t</div>`);\n\tbgInstance = dom.toDOM('<div class=\"CodeMirror-prompt__shade\"></div>');\n\t\n\ttarget.appendChild(dialogInstance);\n\ttarget.appendChild(bgInstance);\n\t\n\tanimateShow(dialogInstance, bgInstance, {complete: callback});\n}\n\nexport function hide(callback) {\n\tif (dialogInstance) {\n\t\tif (lastTween) {\n\t\t\tlastTween.stop();\n\t\t\tlastTween = null;\n\t\t}\n\t\tanimateHide(dialogInstance, bgInstance, {complete: callback});\n\t\tdialogInstance = bgInstance = null;\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @param {Element} dialog\n * @param {Element} bg\n * @param {Object} options \n */\nfunction animateShow(dialog, bg, options={}) {\n\tvar cssTransform = prefixed('transform');\n\tvar dialogStyle = dialog.style;\n\tvar bgStyle = bg.style;\n\tvar height = dialog.offsetHeight;\n\tvar tmpl = template(has3d ? 'translate3d(0, <%= pos %>, 0)' : 'translate(0, <%= pos %>)');\n\n\tbgStyle.opacity = 0;\n\ttween({\n\t\tduration: 200,\n\t\tstep(pos) {\n\t\t\tbgStyle.opacity = pos;\n\t\t}\n\t});\n\t\n\tdialogStyle[cssTransform] = tmpl({pos: -height});\n\t\n\treturn lastTween = tween({\n\t\tduration: 400,\n\t\teasing: 'outCubic',\n\t\tstep(pos) {\n\t\t\tdialogStyle[cssTransform] = tmpl({pos: (-height * (1 - pos)) + 'px'});\n\t\t},\n\t\tcomplete: function() {\n\t\t\tlastTween = null;\n\t\t\toptions.complete && options.complete(dialog, bg);\n\t\t}\n\t});\n}\n\n/**\n * @param {Element} dialog\n * @param {Element} bg\n * @param {Object} options\n */\nfunction animateHide(dialog, bg, options) {\n\tvar dialogStyle = dialog.style;\n\tvar bgStyle = bg.style;\n\tvar height = dialog.offsetHeight;\n\tvar cssTransform = prefixed('transform');\n\tvar tmpl = template(has3d ? 'translate3d(0, <%= pos %>, 0)' : 'translate(0, <%= pos %>)');\n\n\treturn tween({\n\t\tduration: 200,\n\t\tstep(pos) {\n\t\t\tdialogStyle[cssTransform] = tmpl({pos: (-height * pos) + 'px'});\n\t\t\tbgStyle.opacity = 1 - pos;\n\t\t},\n\t\tcomplete() {\n\t\t\tdom.remove([dialog, bg]);\n\t\t\toptions.complete && options.complete(dialog, bg);\n\t\t}\n\t});\n}\n\nfunction typeText(target, options, timer, next) {\n\tvar chars = options.text.split('');\n\ttimer(function perform() {\n\t\ttarget.value += chars.shift();\n\t\tif (chars.length) {\n\t\t\ttimer(perform, options.delay);\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t}, options.delay);\n}\n\nfunction wrap(key, value) {\n\treturn typeof value === 'object' ? value : {[key]: value};\n}","/**\n * Extension that allows authors to display context tooltips bound to specific\n * positions\n */\nimport tween from '../vendor/tween';\nimport {extend, prefixed, makePos, has3d} from '../utils';\nimport * as dom from '../dom';\n\nvar instance = null;\nvar lastTween = null;\n\nexport var alignDefaults = {\n\t/** CSS selector for getting popup tail */\n\ttailClass: 'CodeMirror-tooltip__tail',\n\t\n\t/** Class name for switching tail/popup position relative to target point */\n\tbelowClass: 'CodeMirror-tooltip_below',\n\t\n\t/** Min distance between popup and viewport */\n\tpopupMargin: 5,\n\t\n\t/** Min distance between popup left/right edge and its tail */\n\ttailMargin: 11\n};\n\nexport var actions = {\n\t/**\n\t * Shows tooltip with given text, wait for `options.wait`\n\t * milliseconds then hides tooltip\n\t */\n\ttooltip({options, editor, next, prev, timer}) {\n\t\toptions = extend({\n\t\t\twait: 4000,   // time to wait before hiding tooltip\n\t\t\tpos: 'caret'  // position where tooltip should point to\n\t\t}, wrap('text', options));\n\t\t\n\t\tvar pos = resolvePosition(options.pos, editor);\n\t\tshow(options.text, pos, function() {\n\t\t\t// timer(function() {\n\t\t\t// \thide(() => timer(next));\n\t\t\t// }, options.wait);\n\n\t\t\tinstance.querySelector('.CodeMirror-tooltip__prev').addEventListener('click', () => {\n\t\t\t\thide(prev)\n\t\t\t\tconsole.log('prev')\n\t\t\t})\n\n\t\t\tinstance.querySelector('.CodeMirror-tooltip__next').addEventListener('click', () => {\n\t\t\t\thide(next)\n\t\t\t\tconsole.log('next')\n\t\t\t})\n\t\t});\n\t},\n\n\t/**\n\t * Shows tooltip with specified text. This tooltip should be explicitly \n\t * hidden with `hideTooltip` action\n\t */\n\tshowTooltip({options, editor, next, timer}) {\n\t\toptions = extend({\n\t\t\tpos: 'caret'  // position where tooltip should point to\n\t\t}, wrap('text', options));\n\t\t\n\t\tshow(options.text, resolvePosition(options.pos, editor));\n\t\tnext();\n\t},\n\n\t/**\n\t * Hides tooltip, previously shown by 'showTooltip' action\n\t */\n\thideTooltip({options, editor, next, timer}) {\n\t\thide(next);\n\t}\n};\n\nexport function show(text, pos, callback) {\n\thide();\n\t\n\tinstance = dom.toDOM(`<div class=\"CodeMirror-tooltip\">\n\t\t<div class=\"CodeMirror-tooltip__content\">${text}</div>\n\t\t<div class=\"CodeMirror-tooltip__tail\"></div>\n\t\t<button class=\"CodeMirror-tooltip__prev\">prev</button>\n\t\t<button class=\"CodeMirror-tooltip__next\">next</button>\n\t</div>`);\n\n\tdom.css(instance, prefixed('transform'), 'scale(0)');\n\tdocument.body.appendChild(instance);\n\n\talignPopupWithTail(instance, {position: pos});\n\tanimateShow(instance, {complete: callback});\n}\n\nexport function hide(callback) {\n\tif (instance) {\n\t\tif (lastTween) {\n\t\t\tlastTween.stop();\n\t\t\tlastTween = null;\n\t\t}\n\t\tanimateHide(instance, {complete: callback});\n\t\tinstance = null;\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * Helper function that finds optimal position of tooltip popup on page\n * and aligns popup tail with this position\n * @param {Element} popup\n * @param {Object} options\n */\nfunction alignPopupWithTail(popup, options={}) {\n\toptions = extend({}, alignDefaults, options);\n\t\n\tdom.css(popup, {\n\t\tleft: 0,\n\t\ttop: 0\n\t});\n\t\n\tvar tail = popup.querySelector('.' + options.tailClass);\n\t\n\tvar resultX = 0, resultY = 0;\n\tvar pos = options.position;\n\tvar vp = dom.viewportRect();\n\t\n\tvar width = popup.offsetWidth;\n\tvar height = popup.offsetHeight;\n\t\n\tvar isTop;\n\t\t\n\t// calculate horizontal position\n\tresultX = Math.min(vp.width - width - options.popupMargin, Math.max(options.popupMargin, pos.x - vp.left - width / 2));\n\t\n\t// calculate vertical position\n\tif (height + tail.offsetHeight + options.popupMargin + vp.top < pos.y) {\n\t\t// place above target position\n\t\tresultY = Math.max(0, pos.y - height - tail.offsetHeight);\n\t\tisTop = true;\n\t} else {\n\t\t// place below target position \n\t\tresultY = pos.y + tail.offsetHeight;\n\t\tisTop = false;\n\t}\n\t\n\t// calculate tail position\n\tvar tailMinLeft = options.tailMargin;\n\tvar tailMaxLeft = width - options.tailMargin;\n\ttail.style.left = Math.min(tailMaxLeft, Math.max(tailMinLeft, pos.x - resultX - vp.left)) + 'px';\n\t\n\tdom.css(popup, {\n\t\tleft: resultX,\n\t\ttop: resultY\n\t});\n\t\n\tpopup.classList.toggle(options.belowClass, !isTop);\n}\n\n/**\n * @param {jQuery} elem\n * @param {Object} options \n */\nfunction animateShow(elem, options={}) {\n\toptions = extend({}, alignDefaults, options);\n\tvar cssOrigin = prefixed('transform-origin');\n\tvar cssTransform = prefixed('transform');\n\tvar style = elem.style;\n\n\tvar tail = elem.querySelector('.' + options.tailClass);\n\tvar xOrigin = dom.css(tail, 'left');\n\tvar yOrigin = tail.offsetTop;\n\tif (elem.classList.contains(options.belowClass)) {\n\t\tyOrigin -= tail.offsetHeight;\n\t}\n\t\n\tyOrigin += 'px';\n\n\tstyle[cssOrigin] = xOrigin + ' ' + yOrigin;\n\tvar prefix = has3d ? 'translateZ(0) ' : '';\n\t\n\treturn lastTween = tween({\n\t\tduration: 800,\n\t\teasing: 'outElastic',\n\t\tstep(pos) {\n\t\t\tstyle[cssTransform] = prefix + 'scale(' + pos + ')';\n\t\t},\n\t\tcomplete() {\n\t\t\tstyle[cssTransform] = 'none';\n\t\t\tlastTween = null;\n\t\t\toptions.complete && options.complete(elem);\n\t\t}\n\t});\n}\n\n/**\n * @param {jQuery} elem\n * @param {Object} options\n */\nfunction animateHide(elem, options) {\n\tvar style = elem.style;\n\n\treturn tween({\n\t\tduration: 200,\n\t\teasing: 'linear',\n\t\tstep: function(pos) {\n\t\t\tstyle.opacity = (1 - pos);\n\t\t},\n\t\tcomplete: function() {\n\t\t\tdom.remove(elem);\n\t\t\toptions.complete && options.complete(elem);\n\t\t}\n\t});\n}\n\n/**\n * Resolves position where tooltip should point to\n * @param {Object} pos\n * @param {CodeMirror} editor\n * @returns {Object} Object with <code>x</code> and <code>y</code> \n * properties\n */\nfunction resolvePosition(pos, editor) {\n\tif (pos === 'caret') {\n\t\t// get absolute position of current caret position\n\t\treturn sanitizeCaretPos(editor.cursorCoords(true));\n\t}\n\n\tif (typeof pos === 'object') {\n\t\tif ('x' in pos && 'y' in pos) {\n\t\t\t// passed absolute coordinates\n\t\t\treturn pos;\n\t\t}\n\n\t\tif ('left' in pos && 'top' in pos) {\n\t\t\t// passed absolute coordinates\n\t\t\treturn sanitizeCaretPos(pos);\n\t\t}\n\t}\n\t\n\tpos = makePos(pos, editor);\n\treturn sanitizeCaretPos(editor.charCoords(pos));\n}\n\nfunction sanitizeCaretPos(pos) {\n\tif ('left' in pos) {\n\t\tpos.x = pos.left;\n\t}\n\n\tif ('top' in pos) {\n\t\tpos.y = pos.top;\n\t}\n\n\treturn pos;\n}\n\nfunction wrap(key, value) {\n\treturn typeof value === 'object' ? value : {[key]: value};\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}